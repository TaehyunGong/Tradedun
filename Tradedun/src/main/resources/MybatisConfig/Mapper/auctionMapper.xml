<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.thkong.tradedun.Auction.dao.auctionDao">

	<select id="selectItemDetailList" resultType="ItemDetail">
		SELECT itemId, itemName, itemRarity, itemType, itemTypeDetail, itemAvailableLevel, itemRarityColor
		FROM  ItemDetail
	</select>
	
	<select id='selectBoardNo' resultType="Int">
		SELECT IFNULL(max(boardNo)+1,1) AS boardNo FROM AuctionBoard
	</select>
	
	<insert id='insertAuctionBoard' parameterType="AuctionBoard">
		INSERT INTO AuctionBoard(boardNo, subject, userNo, createDT)
		VALUES(#{boardNo}, #{subject}, #{userNo}, #{createDT})
	</insert>
	
	<insert id='insertAuctionAvatarList' parameterType="java.util.Map">
		INSERT INTO AuctionAvatarList(boardNo, charBox, slotName, avatarNo, avatarName, optionAbility, createDT)
		VALUES
		<foreach collection="list" item="item" separator=" , ">
            (#{item.boardNo}, #{item.charBox}, #{item.slotName}, #{item.avatarNo}, #{item.avatarName}, #{item.optionAbility}, #{item.createDT})
        </foreach>
	</insert>
	
	<insert id='insertAuctionBoardCharBox' parameterType="AuctionBoardCharBox">
		INSERT INTO AuctionBoardCharBox(boardNo, charBox, charId, jobName, jobGrowName, imageName, totalPrice, saleYN, category, comment, createDT)
		VALUES(#{boardNo}, #{charBox}, #{charId}, #{jobName}, #{jobGrowName}, #{imageName}, #{totalPrice}, #{saleYN}, #{category}, #{comment}, #{createDT})
	</insert>
	
	<select id="selectAvatarCategory" resultType="Category">
		SELECT categoryCode, categoryKind, categoryName, sort
		FROM Category
		WHERE deleteDT IS NULL
		AND categoryKind IN ('event', 'rare')
		ORDER BY sort
	</select>
	
	<select id="selectAllJobList" resultType="CodeTB">
		SELECT code, codeKind, codeName, sort 
		FROM CodeTB
		WHERE deleteDT IS NULL
		AND  codeKind = 'jobId'
		ORDER BY sort
	</select>
	
	<select id="selectRareAvatarList" resultType="AvatarMastar">
		SELECT T1.jobId, T1.jobName, T1.categoryCode, T2.categoryName, T1.avatarSetName
		FROM (SELECT DISTINCT jobId, jobName, categoryCode, avatarSetName
			  FROM AvatarMastar) T1	  
			 JOIN Category T2
			 	  ON T1.categoryCode = T2.categoryCode
			 JOIN CodeTB T3
			 	  ON T1.jobId = T3.code
		ORDER BY T3.sort, T1.categoryCode	 	 
	</select>
	
	<select id="selectAvatarSet" resultType="Avatar" parameterType="AvatarMastar">
		SELECT slotName, avatarNo AS "itemId", avatarName AS "itemName"
		FROM AvatarMastar
		WHERE jobId = #{jobId}
		AND categoryCode = #{categoryCode}
	</select>
	
</mapper>